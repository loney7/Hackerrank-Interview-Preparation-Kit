#include <bits/stdc++.h>

using namespace std;

// Complete the substrCount function below.

long substrCount(int n, string s) {
        long long int count = 0;
    for (int i = 0;i<n-1;) {
        long long int p = 0;
        int flag = 0;
        while(i+1 <n && s[i] == s[i+1]) {
            p++;i++;flag = 1;
        }
        if(p&1) {
            count = count + p*((p+1)/2);
        } else {
            count = count + (p/2)*(p+1);
        }
        
        if(flag == 0) {
            i++;
        }       
        
    }    
    count = count + (long long)n;
    
    for (int i = 1;i<n -1;i++) {
        int l = i-1;
        int r = i+1;
        char c = s[i];
        char q = s[i-1];
        while(l>=0 && r< n) {
            if(s[l] == s[r] && s[l] == q && c!= q) {
                count++;
                l--;
                r++;
            } else {
                break;
            }
        }
    }

    
    return count;

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string s;
    getline(cin, s);

    long result = substrCount(n, s);

    fout << result << "\n";

    fout.close();

    return 0;
}
